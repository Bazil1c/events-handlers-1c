
#Область ПрограммныйИнтерфейс

// Процедура - обработчик подписки на событие "ПередЗаписью".
//	См. "СправочникОбъект.ПередЗаписью" в синтакс-помощнике.
//
// Параметры:
//  Источник  - СправочникОбъект - Источник события.
//  Отказ  - Булево - Флаг отмены.
//
Процедура ПередЗаписью(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Модуль = ОбщийМодульОбъекта(Источник);

	ПараметрыОбработчиков = ПараметрыОбработчиковОбъекта(Модуль);
		
	Если ПараметрыОбработчиков.ПередЗаписью Тогда
		Модуль.ПередЗаписью(Источник, Отказ);	
	КонецЕсли;	
	
КонецПроцедуры

// Процедура - обработчик подписки на событие "ПриЗаписи".
//	См. "СправочникОбъект.ПриЗаписи" в синтакс-помощнике.
//
// Параметры:
//  Источник  - СправочникОбъект - Источник события.
//  Отказ  - Булево - Флаг отмены.
//
Процедура ПриЗаписи(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Модуль = ОбщийМодульОбъекта(Источник);

	ПараметрыОбработчиков = ПараметрыОбработчиковОбъекта(Модуль);
		
	Если ПараметрыОбработчиков.ПриЗаписи Тогда
		Модуль.ПриЗаписи(Источник, Отказ);	
	КонецЕсли;	
	
КонецПроцедуры

// Процедура - обработчик подписки на событие "ОбработкаПроверкиЗаполнения".
//	См. "СправочникОбъект.ОбработкаПроверкиЗаполнения" в синтакс-помощнике.
//
// Параметры:
//  Источник  - СправочникОбъект - Источник события.
//  Отказ  - Булево - Флаг отмены.
//  ПроверяемыеРеквизиты  - Массив - Массив проверяемых реквизитов.
//
Процедура ОбработкаПроверкиЗаполнения(Источник, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	Модуль = ОбщийМодульОбъекта(Источник);

	ПараметрыОбработчиков = ПараметрыОбработчиковОбъекта(Модуль);
		
	Если ПараметрыОбработчиков.ОбработкаПроверкиЗаполнения Тогда
		Модуль.ОбработкаПроверкиЗаполнения(Источник, Отказ, ПроверяемыеРеквизиты);	
	КонецЕсли;	
	
КонецПроцедуры

// Процедура - обработчик подписки на событие "ОбработкаЗаполнения".
//	См. "СправочникОбъект.ОбработкаЗаполнения" в синтакс-помощнике.
//
// Параметры:
//  Источник  - СправочникОбъект - Источник события.
//  ДанныеЗаполнения  - Произволный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения  - Строка - Текст, используемый для заполнения.
//  СтандартнаяОбработка  - Булево - Признак выполнения стандартной обработки события.
//
Процедура ОбработкаЗаполнения(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	Модуль = ОбщийМодульОбъекта(Источник);

	ПараметрыОбработчиков = ПараметрыОбработчиковОбъекта(Модуль);
		
	Если ПараметрыОбработчиков.ОбработкаЗаполнения Тогда
		Модуль.ОбработкаЗаполнения(Источник, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);	
	КонецЕсли;	
	
КонецПроцедуры

// Процедура - обработчик подписки на событие "ПередУдалением".
//	См. "СправочникОбъект.ПередУдалением" в синтакс-помощнике.
//
// Параметры:
//  Источник  - СправочникОбъект - Источник события.
//  Отказ  - Булево - Флаг отмены.
//
Процедура ПередУдалением(Источник, Отказ) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Модуль = ОбщийМодульОбъекта(Источник);

	ПараметрыОбработчиков = ПараметрыОбработчиковОбъекта(Модуль);
		
	Если ПараметрыОбработчиков.ПередУдалением Тогда
		Модуль.ПередУдалением(Источник, Отказ);	
	КонецЕсли;	
	
КонецПроцедуры

// Процедура - обработчик подписки на событие "ОбработкаПолученияПредставления" для Справочников.
//	См. "СправочникМенеджер.ОбработкаПолученияПредставления" в синтакс-помощнике.
//
// Параметры:
//  Источник  - СправочникОбъект - Источник события.
//  Данные  - Структура - Содержит значения полей, из которых формируется представление.
//  Представление  - Строка - Строка, в которую нужно поместить представление объекта или ссылки.
//  СтандартнаяОбработка  - Булево - Признак выполнения стандартной обработки события.
//
Процедура ОбработкаПолученияПредставления(Источник, Данные, Представление, СтандартнаяОбработка) Экспорт
	
	ПустаяСсылка = Источник.ПустаяСсылка();
	Модуль = ОбщийМодульОбъекта(ПустаяСсылка);

	ПараметрыОбработчиков = ПараметрыОбработчиковОбъекта(Модуль);
		
	Если ПараметрыОбработчиков.ОбработкаПолученияПредставления Тогда
		Модуль.ОбработкаПолученияПредставления(Источник, Данные, Представление, СтандартнаяОбработка);	
	КонецЕсли;	
	
КонецПроцедуры

// Процедура - обработчик подписки на событие "ОбработкаПолученияПолейПредставления" для Документов.
//	См. "ДокументОбъект.ОбработкаПолученияПолейПредставления" в синтакс-помощнике.
//
// Параметры:
//  Источник  - ДокументОбъект - Источник события.
//  Поля  - Массив - Массив, содержащий имена полей, которые нужны для формирования представления объекта или ссылки.
//  СтандартнаяОбработка  - Булево - Признак выполнения стандартной обработки события.
//
Процедура ОбработкаПолученияПолейПредставления(Источник, Поля, СтандартнаяОбработка) Экспорт
	
	ПустаяСсылка = Источник.ПустаяСсылка();
	Модуль = ОбщийМодульОбъекта(ПустаяСсылка);
	
	ПараметрыОбработчиков = ПараметрыОбработчиковОбъекта(Модуль);
		
	Если ПараметрыОбработчиков.ОбработкаПолученияПолейПредставления Тогда
		Модуль.ОбработкаПолученияПолейПредставления(Источник, Поля, СтандартнаяОбработка);
	КонецЕсли;	
	
КонецПроцедуры

// Процедура - обработчик подписки на событие "ОбработкаПолученияФормы" для Документов.
//	См. "ДокументОбъект.ОбработкаПолученияФормы" в синтакс-помощнике.
//
// Параметры:
//  Источник  - ДокументОбъект - Источник события.
//  ВидФормы  - Строка - Имя стандартной формы. .
//  Параметры  - Структура - Параметры формы.
//  ВыбраннаяФорма  - Строка - Содержит имя открываемой формы или объект метаданных Форма.
//  ДополнительнаяИнформация  - Структура - Дополнительная информация открытия формы.
//  СтандартнаяОбработка  - Булево - Признак выполнения стандартной обработки события.
//
Процедура ОбработкаПолученияФормы(Источник, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, 
	СтандартнаяОбработка) Экспорт
	
	ПустаяСсылка = Источник.ПустаяСсылка();
	Модуль = ОбщийМодульОбъекта(ПустаяСсылка);

	ПараметрыОбработчиков = ПараметрыОбработчиковОбъекта(Модуль);
		
	Если ПараметрыОбработчиков.ОбработкаПолученияФормы Тогда
		Модуль.ОбработкаПолученияФормы(Источник, ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, 
			СтандартнаяОбработка);	
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПараметрыОбработчиковОбъекта(Модуль)

	ПараметрыОбработчиков = ПараметрыОбработчиковПоУмолчанию();
	
	Если Модуль = Неопределено Тогда
		Возврат ПараметрыОбработчиков;
	КонецЕсли;	
		
	Модуль.ОпределитьПараметрыОбработчиков(ПараметрыОбработчиков);
	
	Возврат ПараметрыОбработчиков; 

КонецФункции

// Инициализирует набор параметров, задающих флаги выполнения обработчиков.
//
// Возвращаемое значение:
//   Структура   - Обработчики, переопределенные для объекта.
//
Функция ПараметрыОбработчиковПоУмолчанию()
	
	ПараметрыОбработчиков = Новый Структура;
	
	ПараметрыОбработчиков.Вставить("ПередЗаписью", Ложь);
	ПараметрыОбработчиков.Вставить("ПриЗаписи", Ложь);
	
	ПараметрыОбработчиков.Вставить("ПередУдалением", Ложь);
	
	ПараметрыОбработчиков.Вставить("ОбработкаЗаполнения", Ложь);
	ПараметрыОбработчиков.Вставить("ОбработкаПроверкиЗаполнения", Ложь);
	
	ПараметрыОбработчиков.Вставить("ОбработкаПолученияПредставления", Ложь);
	ПараметрыОбработчиков.Вставить("ОбработкаПолученияФормы", Ложь);

	Возврат ПараметрыОбработчиков;

КонецФункции

// Возвращает ссылку на общий модуль по источнику события.
//
// Параметры:
//  Источник - СправочникОбъект, СправочникМенеджер - Источник события.
//
// Возвращаемое значение:
//  ОбщийМодуль, Неопределено - Общий модуль.
//
Функция ОбщийМодульОбъекта(Источник)

	Возврат мк_ОбщегоНазначения.ОбщийМодульОбъекта(Источник);

КонецФункции 

#КонецОбласти
