
#Область ПрограммныйИнтерфейс

// Процедура, вызываемая из одноименного обработчика события формы.
//	Вызывается из модуля "СобытияФорм" в одноименном обработчике.
//	См. "УправляемаяФорма.ПриЧтенииНаСервере" в синтакс-помощнике.
//
// Параметры:
//	Форма - УправляемаяФорма - форма, из обработчика события которой происходит вызов процедуры.
//	ТекущийОбъект - Объект - объект, который будет прочитан.
//
Процедура ПриЧтенииНаСервере(Форма, ТекущийОбъект) Экспорт
	
	Модуль = ОбщийМодульФормы(Форма);

	ПараметрыОбработчиков = ПараметрыОбработчиковОбъекта(Модуль);
		
	Если ПараметрыОбработчиков.ПриЧтенииНаСервере Тогда
		Модуль.ПриЧтенииНаСервере(Форма, ТекущийОбъект);	
	КонецЕсли;	

КонецПроцедуры

// Вызывается в обработчике одноименного события формы объекта.
//	Вызывается из модуля "СобытияФорм" в одноименном обработчике.
//	См. "УправляемаяФорма.ПриСозданииНаСервере" в синтакс-помощнике.
//
// Параметры:
//	Форма - УправляемаяФорма - Форма объекта.
//  Отказ - Булево - Отказ от выполнения обработчика.
//	СтандартнаяОбработка - Булево - Признак выполнения стандартной (системной) обработки события.
//
Процедура ПриСозданииНаСервере(Форма, Отказ = Ложь, СтандартнаяОбработка = Истина) Экспорт
	
	// Определение общего модуля формы
	Модуль = ОбщийМодульФормы(Форма);
	
	// Определение параметров обработчиков
	ПараметрыОбработчиков = ПараметрыОбработчиковОбъекта(Модуль);
		
	Если ПараметрыОбработчиков.ПриСозданииНаСервере Тогда
		Модуль.ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка);	
	КонецЕсли;	
		
КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//	Вызывается через модуль "СобытияФорм".
//	См. "УправляемаяФорма.ПередЗаписьюНаСервере" в синтакс-помощнике.
//
// Параметры:
//	Форма - УправляемаяФорма - Форма, из обработчика события которой происходит вызов процедуры.
//  Отказ - Булево - Отказ от выполнения обработчика.
//	ТекущийОбъект - Объект - Записываемый объект.
//	ПараметрыЗаписи - Структура - Структура, содержащая параметры записи..
//
Процедура ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	Модуль = ОбщийМодульФормы(Форма);

	ПараметрыОбработчиков = ПараметрыОбработчиковОбъекта(Модуль);
		
	Если ПараметрыОбработчиков.ПередЗаписьюНаСервере Тогда
		Модуль.ПередЗаписьюНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи);	
	КонецЕсли;	

КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//	Вызывается через модуль "СобытияФорм.ПриСозданииНаСервере".
//	См. "УправляемаяФорма.ПриЗаписиНаСервере" в синтакс-помощнике.
//
// Параметры:
// 	Форма - УправляемаяФорма - Форма, из обработчика события которой происходит вызов процедуры.
//  Отказ - Булево - Отказ от выполнения обработчика.
//	ТекущийОбъект - Объект - Записываемый объект.
//	ПараметрыЗаписи - Структура - Структура, содержащая параметры записи..
//
Процедура ПриЗаписиНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	Модуль = ОбщийМодульФормы(Форма);

	ПараметрыОбработчиков = ПараметрыОбработчиковОбъекта(Модуль);
		
	Если ПараметрыОбработчиков.ПриЗаписиНаСервере Тогда
		Модуль.ПриЗаписиНаСервере(Форма, Отказ, ТекущийОбъект, ПараметрыЗаписи);	
	КонецЕсли;	

КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//	Вызывается из модуля "СобытияФорм" в одноименном обработчике.
//	См. "УправляемаяФорма.ПередЗаписьюНаСервере" в синтакс-помощнике.
//
// Параметры:
// 	Форма - УправляемаяФорма - Форма, из обработчика события которой происходит вызов процедуры.
//	ТекущийОбъект - Объект - Записываемый объект.
//	ПараметрыЗаписи - Структура - Структура, содержащая параметры записи..
//
Процедура ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	Модуль = ОбщийМодульФормы(Форма);

	ПараметрыОбработчиков = ПараметрыОбработчиковОбъекта(Модуль);
		
	Если ПараметрыОбработчиков.ПослеЗаписиНаСервере Тогда
		Модуль.ПослеЗаписиНаСервере(Форма, ТекущийОбъект, ПараметрыЗаписи);	
	КонецЕсли;	

КонецПроцедуры

// Переопределяемая процедура, вызываемая из одноименного обработчика события формы.
//	Вызывается из модуля "СобытияФорм" в одноименном обработчике.
//	См. "УправляемаяФорма.ОбработкаПроверкиЗаполненияНаСервере" в синтакс-помощнике.
//
// Параметры:
// 	Форма - УправляемаяФорма - Форма, из обработчика события которой происходит вызов процедуры.
//  Отказ - Булево - Отказ от выполнения обработчика.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам.
//
Процедура ОбработкаПроверкиЗаполненияНаСервере(Форма, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	Модуль = ОбщийМодульФормы(Форма);

	ПараметрыОбработчиков = ПараметрыОбработчиковОбъекта(Модуль);
		
	Если ПараметрыОбработчиков.ОбработкаПроверкиЗаполненияНаСервере Тогда
		Модуль.ОбработкаПроверкиЗаполненияНаСервере(Форма, Отказ, ПроверяемыеРеквизиты);	
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Инициализирует набор параметров, задающих флаги выполнения обработчиков формы.
//
// Возвращаемое значение:
//   Структура   - Обработчики, переопределенные для формы.
//
Функция ПараметрыОбработчиковПоУмолчанию()
	
	ПараметрыОбработчиков = Новый Структура;
	ПараметрыОбработчиков.Вставить("ПриСозданииНаСервере", Ложь);
	ПараметрыОбработчиков.Вставить("ПриЧтенииНаСервере", Ложь);
	ПараметрыОбработчиков.Вставить("ПередЗаписьюНаСервере", Ложь);
	ПараметрыОбработчиков.Вставить("ПриЗаписиНаСервере", Ложь);
	ПараметрыОбработчиков.Вставить("ПослеЗаписиНаСервере", Ложь);
	ПараметрыОбработчиков.Вставить("ОбработкаПроверкиЗаполненияНаСервере", Ложь);
	ПараметрыОбработчиков.Вставить("ПриЗагрузкеДанныхИзНастроекНаСервере", Ложь);
	ПараметрыОбработчиков.Вставить("ПередЗагрузкойДанныхИзНастроекНаСервере", Ложь);

	Возврат ПараметрыОбработчиков;

КонецФункции

Функция ПараметрыОбработчиковОбъекта(Модуль)

	ПараметрыОбработчиков = ПараметрыОбработчиковПоУмолчанию();
	
	Если Модуль = Неопределено Тогда
		Возврат ПараметрыОбработчиков;
	КонецЕсли;	
	
	Модуль.ОпределитьПараметрыОбработчиков(ПараметрыОбработчиков);
		
	Возврат ПараметрыОбработчиков; 

КонецФункции

// Возвращает ссылку на общий модуль по имени формы.
// 	Общий модуль ищется по имени сформированному по имени формы, например:
// 	имя формы "Справочник.Номенклатура.Форма.ФормаЭлемента", модуль - "Справочник_Номенклатура_Форма_ФормаЭлемента".
//
// Параметры:
//  Форма - УправялемаяФорма - Форма объекта
//
// Возвращаемое значение:
//  ОбщийМодуль, Неопределено - Общий модуль.
//
Функция ОбщийМодульФормы(Форма)

	ИмяОбъекта = Форма.ИмяФормы;

	Возврат мк_ОбщегоНазначения.ОбщийМодульПереопределяемогоОбъекта(ИмяОбъекта);

КонецФункции 

#КонецОбласти